# How will I complete this project?

# Launch your Virtual Machine with your Udacity account
# Follow the instructions provided to SSH into your server

# Create a new user named grader
#sudo adduser grader
sudo useradd -p grader grader

# Give the grader the permission to sudo
touch /etc/sudoers.d/grader
sed -i '$a grader ALL=(ALL) NOPASSWD:ALL' /etc/sudoers.d/grader

# Update all currently installed packages
sudo apt-get -y update
sudo apt-get -y upgrade

# Change the SSH port from 22 to 2200
sudo cp /etc/ssh/sshd_config /etc/ssh/sshd_config_backup
# NOTE: kindof ham fisted, but what the heck
sudo sed -i -- 's/^Port.*/Port 2200/g' /etc/ssh/sshd_config
service sshd restart

# Configure the Uncomplicated Firewall (UFW) to only allow incoming
# connections for SSH (port 2200), HTTP (port 80), and NTP (port 123)
sudo ufw default deny incoming
sudo ufw default allow outgoing
# normally would be this, but we are using a different port:
# sudo ufw allow ssh
sudo ufw allow 2200/tcp
sudo ufw allow www # 80
sudo ufw allow ntp # 123
sudo ufw enable

# Configure the local timezone to UTC
sudo cp /etc/timezone /etc/ssh/timezone_backup
echo 'Etc/UTC' | sudo tee /etc/timezone
sudo service cron restart

# Install and configure Apache to serve a Python mod_wsgi application
sudo apt-get -y install apache2
sudo apt-get -y install libapache2-mod-wsgi-py3
# NOTE: kindof ham fisted, but what the heck
sudo sed -i -- 's/<\/VirtualHost>/WSGIScriptAlias \/ \/var\/www\/html\/myapp\.wsgi\n<\/VirtualHost>/g' /etc/apache2/sites-enabled/000-default.conf
sudo apache2ctl restart

# Install and configure PostgreSQL:
sudo apt-get -y install postgresql
    # Do not allow remote connections
    # NOTE: this seems to be the default for v9.3. The data is in
    # /etc/postgresql/9.3/main/pg_hbq.conf

    # Create a new user named catalog that has limited permissions to your
    # catalog application database

# Install git, clone and setup your Catalog App project (from your
# GitHub repository from earlier in the Nanodegree program) so that it
# functions correctly when visiting your serverâ€™s IP address in a
# browser. Remember to set this up appropriately so that your .git
# directory is not publicly accessible via a browser!
